{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///node_modules/@angular/compiler/src sync","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/chat-box/chat-box.component.ts","webpack:///src/app/chat-box/chat-box.component.html","webpack:///src/app/chat-log/chat-log.component.ts","webpack:///src/app/chat-log/chat-log.component.html","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/main/main.component.ts","webpack:///src/app/main/main.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","webpackEmptyContext","AppComponent","title","MainUrl","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","ChatBoxComponent","http","sendMessageUrl","getUserMessageUrl","getUserImageUrl","messageList","userList","pendingMsg","isClosed","isSend","numberOfMessagesUnsent","lastMessage","i","pendingMessages","length","sendMessage","mssg","get","concat","String","subscribe","res","slice","emit","message","error","console","log","s","b","split","Date","UTC","inpDate","diffInMinutes","getTime","image","msg","msgBox","options","headers","reportProgress","data","response","post","JSON","stringify","flag","push","userid","value","splice","closeMe","ChatLogComponent","undefined","join","HeaderComponent","pressed","numberOfTimesButtonPressed","buttonPressed","MainComponent","messageUrl","usersUrl","numberOfPendingMessages","screenWidth","window","innerWidth","usersList","posOfDisplay","visible","val","target","isVisible","event","maxPos","user_id","getWidth","environment","production","bootstrapModule","err","screen","width","orientation","lock"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"./node_modules/@angular/compiler/src sync recursive\";","import {Component} from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ChatBotForIntern';\n  MainUrl: string = 'https://dazzling-saguaro-21294.herokuapp.com/';\n}\n\n","<app-main [MainUrl]=\"MainUrl\"></app-main>\n\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { ChatLogComponent } from './chat-log/chat-log.component';\nimport { ChatBoxComponent } from './chat-box/chat-box.component';\nimport {FormsModule} from \"@angular/forms\";\nimport { MainComponent } from './main/main.component';\nimport {HttpClientModule} from \"@angular/common/http\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    ChatLogComponent,\n    ChatBoxComponent,\n    MainComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\n@Component({\n  selector: 'app-chat-box',\n  templateUrl: './chat-box.component.html',\n  styleUrls: ['./chat-box.component.css']\n})\nexport class ChatBoxComponent implements OnInit {\n  @Input('positionOfDisplay') posOfDisplay: number;\n  @Input('nameOfBot') nameOfBot: string;\n  @Input('id') id: number;\n  @Input('pendingMessages') pendingMessages;\n  @Input('MainURL') MainUrl: string;\n\n  sendMessageUrl = `${this.MainUrl}/sendMessage`;\n  getUserMessageUrl = `${this.MainUrl}/messageOfUser?id=`;\n  getUserImageUrl = `${this.MainUrl}/getImage?id=`;\n  messageList: any = [];\n  userList: any = [];\n\n  @Output('pendingMsg') pendingMsg: EventEmitter<any> = new EventEmitter<any>();\n  @Output('isClosed') isClosed: EventEmitter<number> = new EventEmitter<number>();\n  @Output('isSend') isSend: EventEmitter<boolean> = new EventEmitter<boolean>(false);\n  @Output('numberOfMessagesUnsent') numberOfMessagesUnsent: EventEmitter<number>  = new EventEmitter<number>();\n  @Output('lastMessage') lastMessage: EventEmitter<string> = new EventEmitter<string>();\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n      for(let i=0;i<this.pendingMessages.length;i++){\n        if(this.id==this.pendingMessages[i].id){\n          this.sendMessage(this.pendingMessages[i].mssg);\n        }\n      }\n\n      this.http.get(this.getUserMessageUrl.concat(String(this.id))).subscribe(res => {\n        this.messageList = res;\n        this.messageList = this.messageList.slice(this.messageList.length-10,this.messageList.length);\n        this.lastMessage.emit(this.messageList[this.messageList.length-1].message);\n      }, error =>{\n        console.log('Server Not Found');\n      });\n\n      this.http.get(this.getUserImageUrl.concat(String(this.id))).subscribe(res => {\n        this.userList = res;\n      }, error => {\n        console.log('Server Not Found');\n      });\n  }\n\n  parseISOString(s) {\n    try{\n      let b = s.split(/\\D+/);\n      return new Date(Date.UTC(b[0], --b[1], b[2], b[3], b[4], b[5], b[6]));\n    } catch (e) {\n      console.log('No Database');\n      return 'No Database';\n    }\n  }\n\n  getDateInHumanReadableFormat(inpDate) {\n    if (inpDate != 'No Database') {\n      let diffInMinutes = (((new Date()).getTime() - inpDate.getTime()) / 60000);\n      if (diffInMinutes < 1) {\n        return '* a moment ago';\n      }\n      if (diffInMinutes < 10) {\n        return '* few minutes ago';\n      }\n      if (diffInMinutes < 60) {\n        return '* half an hour ago';\n      }\n      if (diffInMinutes < 1440) {\n        return '* few hours ago';\n      }\n      if (diffInMinutes < 2880) {\n        return '* a day ago';\n      }\n      if (diffInMinutes < 43800) {\n        return '* few days ago';\n      }\n      if (diffInMinutes < 87600) {\n        return '* a month ago';\n      }\n      return '* few months ago';\n    }\n    return '* will be added latter';\n  }\n\n\n  closeMe(){\n    this.isClosed.emit(0);\n  }\n\n  getUserImage(){\n    try{\n      return this.userList[0].image;\n    } catch (e) {\n      return 'none';\n    }\n  }\n\n  sendMessage(msg: string, msgBox?){\n    const options = {\n      headers: {'Content-Type': 'application/json'},\n      reportProgress: true\n    };\n\n    const data = { id: this.id, message: msg };\n\n    if(msg.length > 0){\n      let response;\n      this.http.post(this.sendMessageUrl, JSON.stringify(data), options).subscribe(res => {\n        response = res;\n        response = response.slice(response.length-10,response.length);\n      }, error => {\n        let flag = true;\n        for(let i=0;i<this.pendingMessages.length;i++){\n          if(this.pendingMessages[i].id==this.id && this.pendingMessages[i].mssg==msg){\n            flag = false;\n            break;\n          }\n        }\n        if(flag){\n          this.pendingMsg.emit({id: this.id, mssg: msg});\n          this.numberOfMessagesUnsent.emit(this.pendingMessages.length);\n        }\n        this.messageList.push({userid:this.id, message: msg});\n        try{\n          msgBox.value = '';\n        } catch (e) {\n          console.log('no Input Found');\n        }\n        this.lastMessage.emit(this.messageList[this.messageList.length-1].message);\n      }, () => {\n        this.isSend.emit(true);\n        this.messageList = response;\n        try{\n          msgBox.value = '';\n        } catch (e) {\n          for(let i=0;i<this.pendingMessages.length;i++){\n            if(this.pendingMessages[i].id==this.id && this.pendingMessages[i].mssg==msg){\n              this.pendingMessages.splice(i,1);\n              this.numberOfMessagesUnsent.emit(this.pendingMessages.length);\n              break;\n            }\n          }\n        }\n        this.lastMessage.emit(this.messageList[this.messageList.length-1].message);\n      });\n    }\n  }\n}\n\n\n\n\n\n\n","<div class=\"align-bottom-right\" [style.right]=\"posOfDisplay.toString().concat('px')\">\n  <div class=\"card border\" style=\"width: 290px\">\n    <span class=\"card-header bg-dark\">\n      <img class=\"p-1\" src=\"/assets/images/message-2-16.png\" alt=\"m\">\n      <label class=\"card-title text-white font-weight-bold\">Chat - {{ nameOfBot }}</label>\n      <img class=\"float-right btn bg-white\" src=\"/assets/images/closeButton.png\" alt=\"c\" (click)=\"closeMe()\">\n    </span>\n\n    <span class=\"card-header overflow-auto\" style=\"height: 150px\">\n\n      <ul class=\"list-unstyled\">\n        <li *ngFor=\"let msgInfo of messageList; let i=index\">\n          <div class=\"pb-5\" [class.pt-3]=\"i>0\">\n            <div class=\"bg-white p-2 shadow-sm small w-90 float-left\">\n              {{ msgInfo.message }}\n              <div class=\"small text-black-50\">\n                {{ getDateInHumanReadableFormat(parseISOString(msgInfo.created_at)) }}\n              </div>\n            </div>\n            <img class=\"float-right\" width=\"20px\" height=\"20px\" src=\"/assets/images/car1.jpeg\" alt=\"i\"> <!--change src with [src]=\"getUserImage\"-->\n          </div>\n        </li>\n      </ul>\n    </span>\n\n    <span class=\"form-inline p-2\">\n        <input class=\"form-control form-control-sm\" type=\"text\" #message>\n        <input class=\"form-control form-control-sm btn-sm btn-primary\" type=\"button\" value=\"send\" (click)=\"sendMessage(message.value, message)\">\n    </span>\n  </div>\n</div>\n","import {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-chat-log',\n  templateUrl: './chat-log.component.html',\n  styleUrls: ['./chat-log.component.css']\n})\nexport class ChatLogComponent implements OnInit {\n  @Input('image') img: string;\n  @Input('name') name: string;\n  @Input('lastMessage') lastMessage: string;\n  constructor() { }\n\n  checkLastMessage(){\n    if(this.lastMessage==undefined){\n      return 'No Recent Message.';\n    }\n    if(this.lastMessage.split(' ').length>4){\n      this.lastMessage = (this.lastMessage.split(' ').slice(0,4)).join(' ').concat('...');\n    }\n    return this.lastMessage;\n  }\n\n  ngOnInit(): void { }\n\n}\n","<div  class=\"card-body\">\n  <div class=\"card-group border-bottom\">\n    <span class=\"float-left\">\n      <img src=\"/assets/images/car1.jpeg\" class=\"p-2\" height=\"60px\" width=\"60px\" alt=\"p\"> <!--change scr with [src]=\"img\"-->\n    </span>\n    <span class=\"pl-2\">\n      <div class=\"card-subtitle\">{{ name }}</div>\n      <div class=\"card-text\">{{ checkLastMessage() }}</div>\n    </span>\n  </div>\n</div>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n  @Input('numberOfPendingMessages') numberOfPendingMessages: number;\n\n  pressed: number = -1;\n\n  @Output('pressedTimes') numberOfTimesButtonPressed: EventEmitter<any> = new EventEmitter();\n\n  constructor() {\n    this.numberOfTimesButtonPressed.emit(this.pressed);\n  }\n\n  ngOnInit(): void {\n  }\n\n  buttonPressed(){\n    this.pressed+=1;\n    this.numberOfTimesButtonPressed.emit(this.pressed);\n  }\n\n}\n","<div class=\"card-header\">\n  <label>ng-book 2</label>\n  <button class=\"btn btn-primary float-right\" (click)=\"buttonPressed()\">\n    Messages\n    <span class=\"bg-white text-primary border rounded-circle p-1\">{{ numberOfPendingMessages }}</span>\n  </button>\n</div>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {newArray} from \"@angular/compiler/src/util\";\nimport {last} from \"rxjs/operators\";\n\nexport interface sendingMessagesToUser {\n  id: number,\n  mssg: string\n}\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.css']\n})\nexport class MainComponent implements OnInit {\n  @Input('MainUrl') MainUrl: string;\n  messageUrl: string = `${this.MainUrl}/messages`;\n  usersUrl: string = `${this.MainUrl}/users`;\n  posOfDisplay: number[];\n  visible: number[];\n  numberOfPendingMessages: number = 0;\n  screenWidth: number;\n  pendingMessages: sendingMessagesToUser[] = [];\n  usersList;\n  messageList;\n  lastMessage: string[];\n\n  constructor(private http: HttpClient) {\n    this.screenWidth = window.innerWidth;\n    const options = {\n      headers: {'Content-Type': 'text/plain'},\n    };\n\n    this.http.get(this.messageUrl,options).subscribe(res=>{\n      this.messageList = res;\n    });\n\n    this.http.get(this.usersUrl,options).subscribe(res=>{\n      this.usersList = res;\n      this.posOfDisplay = newArray<number>(this.usersList.length);\n      this.visible = newArray<number>(this.usersList.length);\n      this.lastMessage = newArray<string>(this.usersList.length);\n      for(let i=0;i<this.posOfDisplay.length;i++){\n        this.posOfDisplay[i] = -1;\n        this.visible[i] = 0;\n        this.lastMessage[i] = '';\n      }\n    });\n  }\n\n  ngOnInit(): void { }\n\n  getWidth(val){\n    this.screenWidth = val.target.innerWidth;\n    this.buttonPressed();\n    for(let i=0;i<this.visible.length;i--){\n      if(this.visible[i]==1){\n        this.visible[i] = 0;\n        return;\n      }\n    }\n    this.isVisible();\n  }\n\n  getPendingMsg(event){\n    this.pendingMessages.push(event);\n  }\n\n  isVisible(){\n    let maxPos = 0;\n    for(let i=this.posOfDisplay.length-1;i>-1;i--){\n      if(this.visible[i]){\n        if(maxPos+300<this.screenWidth){\n          this.posOfDisplay[i] = maxPos;\n          maxPos+=300;\n        }\n      }\n    }\n  }\n\n  buttonPressed(){\n    for(let i=0;i<this.visible.length;i++){\n      if(this.visible[i]==0){\n        this.visible[i] = 1;\n        break;\n      }\n    }\n    this.isVisible();\n  }\n\n  getLastMess(event,userid){\n    this.lastMessage[userid] = event;\n  }\n\n  getLastMessage(userid: number){\n    if(this.lastMessage[userid]=='' || this.lastMessage[userid]==undefined) {\n      for (let i = this.messageList.length - 1; i > -1; i--) {\n        if (this.messageList[i].user_id == userid) {\n          return this.messageList[i].message;\n        }\n      }\n    }\n    return this.lastMessage[userid];\n  }\n}\n","<app-header [numberOfPendingMessages]=\"numberOfPendingMessages\" (pressedTimes)=\"buttonPressed()\" (window:resize)=\"getWidth($event)\"></app-header>\n<ul class=\"list-unstyled\">\n  <li *ngFor=\"let user of usersList\">\n    <app-chat-log [image]=\"user.image\" [name]=\"user.name\" [lastMessage]=\"getLastMessage(user.id)\"></app-chat-log>\n  </li>\n</ul>\n\n<ul class=\"list-unstyled\">\n  <li *ngFor=\"let user of usersList; let i=index\">\n    <app-chat-box [MainURL]=\"MainUrl\" [positionOfDisplay]=\"posOfDisplay[i]\" [nameOfBot]=\"user.name\" [id]=\"user.id\" [pendingMessages]=\"pendingMessages\" (lastMessage)=\"getLastMess($event,user.id)\" (numberOfMessagesUnsent)=\"numberOfPendingMessages=$event\" (pendingMsg)=\"getPendingMsg($event)\" (isClosed)=\"visible[i]=0;isVisible()\" *ngIf=\"visible[i]\"></app-chat-box>\n  </li>\n</ul>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\nif (screen.width<426){\n  screen.orientation.lock('portrait');\n}\n"]}